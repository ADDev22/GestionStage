-- MySQL Script generated by MySQL Workbench
-- 03/02/17 16:56:44
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gestion_stage
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gestion_stage
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gestion_stage` DEFAULT CHARACTER SET utf8 ;
USE `gestion_stage` ;

-- -----------------------------------------------------
-- Table `gestion_stage`.`droit_utilisateur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`droit_utilisateur` (
  `idDroit` INT NOT NULL AUTO_INCREMENT,
  `droit` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idDroit`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion_stage`.`utilisateur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`utilisateur` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pseudo` VARCHAR(25) NOT NULL,
  `mdp` VARCHAR(50) NOT NULL,
  `idDroit` INT NOT NULL,
  PRIMARY KEY (`id`, `idDroit`),
  INDEX `fk_utilisateur_fonction_idx` (`idDroit` ASC),
  CONSTRAINT `fk_utilisateur_fonction`
    FOREIGN KEY (`idDroit`)
    REFERENCES `gestion_stage`.`droit_utilisateur` (`idDroit`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion_stage`.`entreprise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`entreprise` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `raisonSociale` VARCHAR(45) NOT NULL,
  `adresseNoRue` INT NOT NULL,
  `adresseRue` VARCHAR(45) NOT NULL,
  `adresseComplement` VARCHAR(45) NULL,
  `adresseCdePostal` INT NOT NULL,
  `adresseVille` VARCHAR(45) NOT NULL,
  `adressePays` VARCHAR(45) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  `tel` INT NOT NULL,
  `secteurActivite` VARCHAR(45) NOT NULL,
  `idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`id`, `idUtilisateur`),
  INDEX `fk_entreprise_utilisateur1_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_entreprise_utilisateur1`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `gestion_stage`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion_stage`.`etudiant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`etudiant` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(20) NOT NULL,
  `prenom` VARCHAR(20) NOT NULL,
  `adresseNoRue` INT NOT NULL,
  `adresseRue` VARCHAR(45) NOT NULL,
  `adresseComplement` VARCHAR(45) NULL,
  `adresseCdePostal` INT NOT NULL,
  `adresseVille` VARCHAR(45) NOT NULL,
  `adressePays` VARCHAR(45) NOT NULL,
  `formation` VARCHAR(45) NOT NULL,
  `niveauEtude` VARCHAR(45) NOT NULL,
  `universite` VARCHAR(45) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  `tel` INT NOT NULL,
  `idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`id`, `idUtilisateur`),
  UNIQUE INDEX `etudiantNomFormation_UNIQUE` (`formation` ASC),
  INDEX `fk_etudiant_utilisateur1_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_etudiant_utilisateur1`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `gestion_stage`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion_stage`.`administrateur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`administrateur` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NOT NULL,
  `adresseNoRue` INT NOT NULL,
  `adresseRue` VARCHAR(45) NOT NULL,
  `adresseComplement` VARCHAR(45) NULL,
  `adresseCdePostal` INT NOT NULL,
  `adresseVille` VARCHAR(45) NOT NULL,
  `adressePays` VARCHAR(45) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  `tel` INT NOT NULL,
  `idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`id`, `idUtilisateur`),
  INDEX `fk_administrateur_utilisateur1_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_administrateur_utilisateur1`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `gestion_stage`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion_stage`.`offre_stage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`offre_stage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `libelle` VARCHAR(45) NOT NULL,
  `domaine` VARCHAR(45) NOT NULL,
  `descriptif` VARCHAR(200) NOT NULL,
  `dateDebut` DATE NOT NULL,
  `duree` VARCHAR(45) NOT NULL,
  `cheminStockage` VARCHAR(150) NOT NULL,
  `valide` CHAR NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion_stage`.`candidature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestion_stage`.`candidature` (
  `idOffre` INT NOT NULL,
  `idEtudiant` INT NOT NULL,
  `dateCandidature` DATE NOT NULL,
  PRIMARY KEY (`idOffre`, `idEtudiant`),
  INDEX `fk_offre_stage_has_etudiant_etudiant1_idx` (`idEtudiant` ASC),
  INDEX `fk_offre_stage_has_etudiant_offre_stage1_idx` (`idOffre` ASC),
  CONSTRAINT `fk_offre_stage_has_etudiant_offre_stage1`
    FOREIGN KEY (`idOffre`)
    REFERENCES `gestion_stage`.`offre_stage` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_offre_stage_has_etudiant_etudiant1`
    FOREIGN KEY (`idEtudiant`)
    REFERENCES `gestion_stage`.`etudiant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
