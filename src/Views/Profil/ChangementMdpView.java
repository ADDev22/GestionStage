package Views.Profil;

import Models.DAO.UtilisateurDAO;
import Models.Utilisateur;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Allam on 04/04/2017.
 */
public class ChangementMdpView extends JFrame {
    private JPanel container;
    private JLabel lAnnonce;
    private JLabel lAncienMdp;
    private JLabel lNouvMdp;
    private JPasswordField pfNouvMdp;
    private JPasswordField pfAncienMdp;
    private JLabel lConfNouvMdp;
    private JPasswordField pfConfNouvMdp;
    private JPanel pBouttons;
    private JButton bChanger;
    private JButton bAnnuler;
    private JLabel lPseudo;
    private JTextField tfPseudo;

    public ChangementMdpView(Utilisateur u) {
        this.setTitle("Gestion Stage");
        this.setSize(500, 500);
        this.setContentPane(container);
        this.setLocationRelativeTo(null);

        tfPseudo.setText(u.getUtilisateurUserName());

        bChanger.addActionListener(new BChangerActionListener());
        bAnnuler.addActionListener(new BAnnulerActionListener());

        this.pack();
        this.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        container = new JPanel();
        container.setLayout(new GridLayoutManager(10, 4, new Insets(0, 0, 0, 0), -1, -1));
        container.setPreferredSize(new Dimension(500, 390));
        lAnnonce = new JLabel();
        lAnnonce.setText("Changement du Mot de passe");
        container.add(lAnnonce, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        container.add(spacer1, new GridConstraints(9, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        lAncienMdp = new JLabel();
        lAncienMdp.setText("Ancien mot de passe");
        container.add(lAncienMdp, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lNouvMdp = new JLabel();
        lNouvMdp.setText("Nouveau mot de passe");
        container.add(lNouvMdp, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pfNouvMdp = new JPasswordField();
        container.add(pfNouvMdp, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        pfAncienMdp = new JPasswordField();
        container.add(pfAncienMdp, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lConfNouvMdp = new JLabel();
        lConfNouvMdp.setText("Confirmez le nouveau mot de passe");
        container.add(lConfNouvMdp, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pfConfNouvMdp = new JPasswordField();
        container.add(pfConfNouvMdp, new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        pBouttons = new JPanel();
        pBouttons.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        container.add(pBouttons, new GridConstraints(8, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        bChanger = new JButton();
        bChanger.setText("Changer le mot de passe");
        pBouttons.add(bChanger, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bAnnuler = new JButton();
        bAnnuler.setText("Annuler");
        pBouttons.add(bAnnuler, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        pBouttons.add(spacer2, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        pBouttons.add(spacer3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        container.add(spacer4, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        container.add(spacer5, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        container.add(spacer6, new GridConstraints(4, 0, 5, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer7 = new Spacer();
        container.add(spacer7, new GridConstraints(4, 3, 5, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer8 = new Spacer();
        container.add(spacer8, new GridConstraints(7, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        lPseudo = new JLabel();
        lPseudo.setText("Pseudo");
        container.add(lPseudo, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfPseudo = new JTextField();
        container.add(tfPseudo, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return container;
    }

    class BChangerActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            UtilisateurDAO uDAO = new UtilisateurDAO();
            Utilisateur u = uDAO.find(new Utilisateur().getId());
            if (u.getUtilisateurMdp().equals(pfAncienMdp.getText())) {
                if (pfNouvMdp.getText().equals(pfConfNouvMdp.getText())) {
                    uDAO.changementLoginMdp(tfPseudo.getText(), pfNouvMdp.getText());
                    //Affichage de la boite de dialogue
                    JOptionPane jOP = new JOptionPane();
                    jOP.showMessageDialog(null, "Changement du mot de passe effectuÃ© avec succes", "Information", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    //Affichage de la boite de dialogue
                    JOptionPane jOP = new JOptionPane();
                    jOP.showMessageDialog(null, "Les champs 'Mot de passe' et 'Confirmation' doivent avoir les meme valeurs", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                //Affichage de la boite de dialogue
                JOptionPane jOP = new JOptionPane();
                jOP.showMessageDialog(null, "L'ancien mot de passe ne correspond pas", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    class BAnnulerActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            ChangementMdpView.this.dispose();
        }
    }
}