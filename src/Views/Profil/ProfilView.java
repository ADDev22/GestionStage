package Views.Profil;

import Controllers.AdministrateurController;
import Controllers.AuthentificationController;
import Controllers.EntrepriseController;
import Controllers.EtudiantController;
import Models.Administrateur;
import Models.DAO.*;
import Models.Entreprise;
import Models.Etudiant;
import Models.Utilisateur;
import Views.Administrateur.AdministrateurAccueilView;
import Views.Administrateur.ResultSetTableModel;
import Views.Compte.AuthentificationView;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Allam on 31/03/2017.
 */
public class ProfilView extends JFrame {
    private JPanel container;
    private JMenuBar menuBar = new JMenuBar();
    private JMenu menu = new JMenu("Fichier");
    private JMenuItem sousMenu = new JMenuItem("Accueil");
    private JMenuItem sousMenu1 = new JMenuItem("Profil");
    private JMenuItem sousMenu2 = new JMenuItem("Déconnexion");

    public ProfilView(JPanel utilisateurPanel) {
        this.setTitle("Gestion Stage");
        this.setSize(500, 500);

        this.container = utilisateurPanel;
        this.setContentPane(container);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);

        sousMenu.addActionListener(new SousMenuActionListener());
        sousMenu1.addActionListener(new SousMenu1ActionListener());
        sousMenu2.addActionListener(new SousMenu2ActionListener());

        //Menu
        menuBar.add(menu);
        //Ajout des sous menus
        menu.add(sousMenu);
        menu.add(sousMenu1);
        menu.add(sousMenu2);
        //Définition à l'intérieur du panel
        this.setJMenuBar(menuBar);

        this.pack();
        this.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        container = new JPanel();
        container.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        container.setPreferredSize(new Dimension(1090, 595));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return container;
    }

    class SousMenuActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            Utilisateur u = new UtilisateurDAO().find(new Utilisateur().getId());
            if (u.getDroit() == 1) {
                AdministrateurDAO administrateurDAO = new AdministrateurDAO();
                AdministrateurController administrateurController = new AdministrateurController(administrateurDAO);
                ResultSetTableModel offresRS = new ResultSetTableModel(new OffreStageDAO().listeOffres());
                AdministrateurAccueilView administrateurAccueilView = new AdministrateurAccueilView(administrateurController, offresRS);
            } else if (u.getDroit() == 2) {
                Entreprise ent = new Entreprise();
                DAO<Entreprise> eDAO = new EntrepriseDAO();
                ent = (Entreprise) eDAO.findTypeUser(u.getUitilisateurId());
                EntrepriseController entrepriseController = new EntrepriseController(ent);
            } else {
                Etudiant et = new Etudiant();
                DAO<Etudiant> eDAO = new EtudiantDAO();
                et = (Etudiant) eDAO.findTypeUser(u.getUitilisateurId());
                EtudiantController etudiantController = new EtudiantController(et);
            }
        }
    }

    class SousMenu1ActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            Utilisateur u = new Utilisateur();
            if (u.getDroit() == 1) {
                Administrateur admin = new AdministrateurDAO().find(u.getIdU());
                ProfilView profilView = new ProfilView(new ProfilAdministrateurView(admin).getpProfilAdministrateur());
                ProfilView.this.dispose();
            } else if (u.getDroit() == 2) {
                Entreprise ent = new EntrepriseDAO().find(u.getIdU());
                ProfilView profilView = new ProfilView(new ProfilEntrepriseView(ent).getpProfilEntreprise());
                ProfilView.this.dispose();
            } else {
                Etudiant et = new EtudiantDAO().find(u.getIdU());
                ProfilView profilView = new ProfilView(new ProfilEtudiantView(et).getpProfilEtudiant());
                ProfilView.this.dispose();
            }
        }
    }

    class SousMenu2ActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            //Attribution des variables statiques qui vont servir de session
            new Utilisateur().setId(0);
            new Utilisateur().setIdU(0);
            new Utilisateur().setNom("");
            new Utilisateur().setDroit(0);

            /*Fentre Authentification*/
            UtilisateurDAO uDAO = new UtilisateurDAO();
            AuthentificationController authController = new AuthentificationController(uDAO);
            AuthentificationView authentificationView = new AuthentificationView(authController);
            ProfilView.this.dispose();
        }
    }
}
