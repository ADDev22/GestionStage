package Views.Compte;

import Controllers.AuthentificationController;
import Controllers.EntrepriseController;
import Controllers.EtudiantController;
import Models.DAO.FonctionDAO;
import Models.DAO.UtilisateurDAO;
import Models.Fonction;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by Allam on 24/03/2017.
 */
public class StatutInscriptionView extends JFrame {
    private JPanel container;
    private JLabel lAnnonce;
    private JLabel lStatut;
    private JComboBox cbStatut;
    private JButton bAnnuler;
    private JButton bSuivant;
    private JPanel pBouttons;
    private FonctionDAO fDAO = new FonctionDAO();
    private List<Fonction> listeDroit = new ArrayList<>();

    public StatutInscriptionView() {
        this.setTitle("Gestion Stage");
        this.setSize(500, 500);
        this.setContentPane(container);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        bSuivant.addActionListener(new BSuivantListener());
        bAnnuler.addActionListener(new BAnnulerListener());

        listeDroit = fDAO.listeFonction();
        for (Fonction f : listeDroit) {
            if (!"Administrateur".equals(f.getFonctionNom()))
                cbStatut.addItem(f.getFonctionNom());
        }

        this.pack();
        this.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        container = new JPanel();
        container.setLayout(new GridLayoutManager(8, 4, new Insets(0, 0, 0, 0), -1, -1));
        container.setPreferredSize(new Dimension(500, 390));
        lAnnonce = new JLabel();
        lAnnonce.setText("Avant de continuer, veuillez renseigner votre statut");
        container.add(lAnnonce, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        container.add(spacer1, new GridConstraints(7, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        lStatut = new JLabel();
        lStatut.setText("Statut");
        container.add(lStatut, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cbStatut = new JComboBox();
        container.add(cbStatut, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        container.add(spacer2, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        container.add(spacer3, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(11, 49), null, 0, false));
        final Spacer spacer4 = new Spacer();
        container.add(spacer4, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(11, 44), null, 0, false));
        final Spacer spacer5 = new Spacer();
        container.add(spacer5, new GridConstraints(3, 0, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        container.add(spacer6, new GridConstraints(3, 3, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        pBouttons = new JPanel();
        pBouttons.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        container.add(pBouttons, new GridConstraints(5, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        bSuivant = new JButton();
        bSuivant.setText("Suivant");
        pBouttons.add(bSuivant, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bAnnuler = new JButton();
        bAnnuler.setText("Annuler");
        pBouttons.add(bAnnuler, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return container;
    }

    class BSuivantListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            if (cbStatut.getSelectedItem().equals("Etudiant")) {
                //EtudiantController etudiantController = new EtudiantController();
                InscriptionEtudiantView inscriptionEtudiantView = new InscriptionEtudiantView();
                StatutInscriptionView.this.dispose();
            } else {
                //EntrepriseController entrepriseController = new EntrepriseController();
                InscriptionEntrepriseView inscriptionEntrepriseView = new InscriptionEntrepriseView();
                StatutInscriptionView.this.dispose();
            }
        }
    }

    class BAnnulerListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            /*Fentre Authentification*/
            UtilisateurDAO uDAO = new UtilisateurDAO();
            AuthentificationController authController = new AuthentificationController(uDAO);
            AuthentificationView authentificationView = new AuthentificationView(authController);
            StatutInscriptionView.this.dispose();
        }
    }
}